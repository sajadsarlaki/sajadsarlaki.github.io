---
const className = Astro.props.class;
const {animationName, duration, delay } = Astro.props;
---

<span
    class={`hidden d-${delay} ${className} t-${duration}`}
    data-animation-name={animationName}
>
    <slot />
</span>

<script>
    const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
            const animationName = entry.target.getAttribute(
                "data-animation-name"
            );

            if (entry.isIntersecting) {
                entry.target.classList.add(animationName);
            } else {
                entry.target.classList.remove(animationName);
            }
        });
    });

    const hiddens = document.querySelectorAll(".hidden");
    hiddens.forEach((el) => observer.observe(el));
</script>

<style>
    .hidden {
        opacity: 0;
        /* transition: all 1.5s; */
    }

    .fadeIn-from-bottom {
        animation: fadeInFromBottom 1s ease forwards;
    }
    @keyframes fadeInFromBottom {
        from {
            opacity: 0;
            filter: blur(5px);
            transform: translateY(200px);
        }
        to {
            opacity: 1;
            filter: blur(0);
            transform: translateY(0);
        }
    }
    .fadeIn-from-top {
        animation: fadeInFromTop 1s ease forwards;
    }
    @keyframes fadeInFromTop {
        from {
            opacity: 0;
            filter: blur(5px);
            transform: translateY(-200px);
        }
        to {
            opacity: 1;
            filter: blur(0);
            transform: translateY(0);
        }
    }
    .fadeIn-from-left {
        animation: fadeInFromLeft 1s ease forwards;
    }
    @keyframes fadeInFromLeft {
        from {
            opacity: 0;
            filter: blur(5px);
            transform: translateX(-200px);
        }
        to {
            opacity: 1;
            filter: blur(0);
            transform: translateX(0);
        }
    }
    .fadeIn-from-right {
        animation: fadeInFromRight 1s ease forwards;
    }
    @keyframes fadeInFromRight {
        from {
            opacity: 0;
            filter: blur(3px);
            transform: translateX(200px);
        }
        to {
            opacity: 1;
            filter: blur(0);
            transform: translateX(0);
        }
    }
    .fadeIn-appearance {
        animation: fadeInWobbling 1s linear forwards;
        transform-origin:bottom ;
    }
    @keyframes fadeInWobbling {
        0% {
            opacity: 0.1;
            filter: blur(5px);
            transform: translateY(200px);

        }
        25% {
            opacity: .1;
            filter: blur(5px);
            transform: translateY(200px);
        }
        50% {
            opacity: .3;
            filter: blur(5px);
            transform: translateY(50px);
        }
        100% {
            opacity: 1;
            filter: blur(0);
        }
    }

    .t-1000 {
        animation-duration: 1s;
    }
    .t-2000 {
        animation-duration: 2s;
    }
    .t-3000 {
        animation-duration: 3s;
    }
    .t-4000 {
        animation-duration: 4s;
    }
    .t-5000 {
        animation-duration: 5s;
    }
    .t-250 {
        animation-duration: 250ms;
    }
    .t-500 {
        animation-duration: 500ms;
    }
    .t-300 {
        animation-duration: 300ms;
    }

    .d-100 {
        animation-delay: 100ms;
    }
    .d-200 {
        animation-delay: 200ms;
    }
    .d-300 {
        animation-delay: 300ms;
    }
    .d-400 {
        animation-delay: 400ms;
    }
    .d-500 {
        animation-delay: 500ms;
    }
    .d-600 {
        animation-delay: 600ms;
    }
    .d-700 {
        animation-delay: 700ms;
    }
    .d-800 {
        animation-delay: 800ms;
    }
    .d-900 {
        animation-delay: 900ms;
    }

    .d-1000 {
        animation-delay: 1s;
    }

    .d-1100 {
        animation-delay: 1100ms;
    }

    .d-1200 {
        animation-delay: 1200ms;
    }

    .d-1300 {
        animation-delay: 1300ms;
    }
    .d-1400 {
        animation-delay: 1400ms;
    }

    .d-1500 {
        animation-delay: 1500ms;
    }

    .d-1600 {
        animation-delay: 1600ms;
    }

    @media (prefers-reduced-motion) {
        .hidden {
            transition: none;
        }
    }
    @media (max-width: 768px) {
  .fadeIn-from-bottom,
  .fadeIn-from-top,
  .fadeIn-from-left,
  .fadeIn-from-right,
  .fadeIn-appearance {
    filter: blur(0) !important;
  }
}

</style>
